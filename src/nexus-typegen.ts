/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */


import type { Context } from "./context"




declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
}

export interface NexusGenEnums {
}

export interface NexusGenScalars {
  String: string
  Int: number
  Float: number
  Boolean: boolean
  ID: string
}

export interface NexusGenObjects {
  ArrayAggregation: { // root type
    count?: number | null; // Int
  }
  Author: { // root type
    firstName?: string | null; // String
    id: string; // ID!
    lastName?: string | null; // String
  }
  AuthorSummary: { // root type
    total?: NexusGenRootTypes['ArrayAggregation'] | null; // ArrayAggregation
  }
  Authors: { // root type
    details?: NexusGenRootTypes['Author'][] | null; // [Author!]
    summary?: NexusGenRootTypes['AuthorSummary'] | null; // AuthorSummary
  }
  FloatAggregation: { // root type
    avg?: number | null; // Float
    count?: number | null; // Int
    max?: number | null; // Float
    min?: number | null; // Float
    sum?: number | null; // Float
  }
  IntegerAggregation: { // root type
    avg?: number | null; // Float
    count?: number | null; // Int
    max?: number | null; // Int
    min?: number | null; // Int
    sum?: number | null; // Int
  }
  Post: { // root type
    authors?: NexusGenRootTypes['Authors'] | null; // Authors
    id: string; // ID!
    title?: string | null; // String
  }
  PostSummary: { // root type
    total?: NexusGenRootTypes['ArrayAggregation'] | null; // ArrayAggregation
  }
  Posts: { // root type
    details?: NexusGenRootTypes['Post'][] | null; // [Post!]
    summary?: NexusGenRootTypes['PostSummary'] | null; // PostSummary
  }
  Query: {};
  StringAggregation: { // root type
    count?: number | null; // Int
    max?: string | null; // String
    min?: string | null; // String
  }
}

export interface NexusGenInterfaces {
}

export interface NexusGenUnions {
}

export type NexusGenRootTypes = NexusGenObjects

export type NexusGenAllTypes = NexusGenRootTypes & NexusGenScalars

export interface NexusGenFieldTypes {
  ArrayAggregation: { // field return type
    count: number | null; // Int
  }
  Author: { // field return type
    firstName: string | null; // String
    id: string; // ID!
    lastName: string | null; // String
  }
  AuthorSummary: { // field return type
    total: NexusGenRootTypes['ArrayAggregation'] | null; // ArrayAggregation
  }
  Authors: { // field return type
    details: NexusGenRootTypes['Author'][] | null; // [Author!]
    summary: NexusGenRootTypes['AuthorSummary'] | null; // AuthorSummary
  }
  FloatAggregation: { // field return type
    avg: number | null; // Float
    count: number | null; // Int
    max: number | null; // Float
    min: number | null; // Float
    sum: number | null; // Float
  }
  IntegerAggregation: { // field return type
    avg: number | null; // Float
    count: number | null; // Int
    max: number | null; // Int
    min: number | null; // Int
    sum: number | null; // Int
  }
  Post: { // field return type
    authors: NexusGenRootTypes['Authors'] | null; // Authors
    id: string; // ID!
    title: string | null; // String
  }
  PostSummary: { // field return type
    total: NexusGenRootTypes['ArrayAggregation'] | null; // ArrayAggregation
  }
  Posts: { // field return type
    details: NexusGenRootTypes['Post'][] | null; // [Post!]
    summary: NexusGenRootTypes['PostSummary'] | null; // PostSummary
  }
  Query: { // field return type
    posts: NexusGenRootTypes['Posts'] | null; // Posts
  }
  StringAggregation: { // field return type
    count: number | null; // Int
    max: string | null; // String
    min: string | null; // String
  }
}

export interface NexusGenFieldTypeNames {
  ArrayAggregation: { // field return type name
    count: 'Int'
  }
  Author: { // field return type name
    firstName: 'String'
    id: 'ID'
    lastName: 'String'
  }
  AuthorSummary: { // field return type name
    total: 'ArrayAggregation'
  }
  Authors: { // field return type name
    details: 'Author'
    summary: 'AuthorSummary'
  }
  FloatAggregation: { // field return type name
    avg: 'Float'
    count: 'Int'
    max: 'Float'
    min: 'Float'
    sum: 'Float'
  }
  IntegerAggregation: { // field return type name
    avg: 'Float'
    count: 'Int'
    max: 'Int'
    min: 'Int'
    sum: 'Int'
  }
  Post: { // field return type name
    authors: 'Authors'
    id: 'ID'
    title: 'String'
  }
  PostSummary: { // field return type name
    total: 'ArrayAggregation'
  }
  Posts: { // field return type name
    details: 'Post'
    summary: 'PostSummary'
  }
  Query: { // field return type name
    posts: 'Posts'
  }
  StringAggregation: { // field return type name
    count: 'Int'
    max: 'String'
    min: 'String'
  }
}

export interface NexusGenArgTypes {
}

export interface NexusGenAbstractTypeMembers {
}

export interface NexusGenTypeInterfaces {
}

export type NexusGenObjectNames = keyof NexusGenObjects;

export type NexusGenInputNames = never;

export type NexusGenEnumNames = never;

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = keyof NexusGenScalars;

export type NexusGenUnionNames = never;

export type NexusGenObjectsUsingAbstractStrategyIsTypeOf = never;

export type NexusGenAbstractsUsingStrategyResolveType = never;

export type NexusGenFeaturesConfig = {
  abstractTypeStrategies: {
    isTypeOf: false
    resolveType: true
    __typename: false
  }
}

export interface NexusGenTypes {
  context: Context;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  inputTypeShapes: NexusGenInputs & NexusGenEnums & NexusGenScalars;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  fieldTypeNames: NexusGenFieldTypeNames;
  allTypes: NexusGenAllTypes;
  typeInterfaces: NexusGenTypeInterfaces;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractTypeMembers: NexusGenAbstractTypeMembers;
  objectsUsingAbstractStrategyIsTypeOf: NexusGenObjectsUsingAbstractStrategyIsTypeOf;
  abstractsUsingStrategyResolveType: NexusGenAbstractsUsingStrategyResolveType;
  features: NexusGenFeaturesConfig;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginInputTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginInputFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
  interface NexusGenPluginArgConfig {
  }
}